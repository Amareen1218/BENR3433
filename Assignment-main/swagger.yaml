openapi: 3.0.0
info:
  title: Gym Fitness Management
  version: 1.0.0
paths:
  /register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reqUsername:
                  type: string
                reqPassword:
                  type: string
                reqName:
                  type: string
                reqEmail:
                  type: string
      responses:
        '200':
          description: User registered successfully
        '400':
          description: Bad request - Missing required fields or validation failed
        '500':
          description: Internal server error

  /create-visit:
    post:
      summary: Create a new visit
      description: Endpoint for creating a new visit record.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                visitorId:
                  type: string
                visitorName:
                  type: string
                gender:
                  type: string
                citizenship:
                  type: string
                visitorAddress:
                  type: string
                phoneNo:
                  type: string
                vehicleNo:
                  type: string
                hostId:
                  type: string
                visitDate:
                  type: string
                place:
                  type: string
                purpose:
                  type: string
      responses:
        '200':
          description: Visit created successfully
        '400':
          description: Bad request - Missing required fields or validation failed
        '500':
          description: Internal server error

  /update-visit/{visitId}:
    patch:
      summary: Update a visit
      description: Endpoint for updating a visit record.
      parameters:
        - name: visitId
          in: path
          required: true
          description: ID of the visit to be updated
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                visitorId:
                  type: string
                visitorName:
                  type: string
                gender:
                  type: string
                citizenship:
                  type: string
                visitorAddress:
                  type: string
                phoneNo:
                  type: string
                vehicleNo:
                  type: string
                hostId:
                  type: string
                visitDate:
                  type: string
                place:
                  type: string
                purpose:
                  type: string
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Visit updated successfully
        '400':
          description: Bad request - No fields provided for update
        '401':
          description: Unauthorized - Token is missing or invalid
        '500':
          description: Internal server error

  /delete-visit/{visitDetailId}:
    delete:
      summary: Delete a visit detail
      description: Endpoint for deleting a visit detail record.
      parameters:
        - name: visitDetailId
          in: path
          required: true
          description: ID of the visit detail to be deleted
          schema:
            type: string
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Visit detail deleted successfully
        '401':
          description: Unauthorized - Token is missing or invalid
        '500':
          description: Internal server error

  /visit-details:
    get:
      summary: Get all visit details
      description: Retrieve a list of all visit details.
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VisitDetail'
        '401':
          description: Unauthorized - Token is missing or invalid
        '500':
          description: Internal server error

  /register-security:
    post:
      summary: Register a security guard
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                id:
                  type: string
                workshift:
                  type: string
                duration:
                  type: string
                date:
                  type: string
              required:
                - name
                - id
                - workshift
                - duration
                - date
      responses:
        '200':
          description: Security guard registered successfully
        '400':
          description: Missing required fields
        '500':
          description: An error occurred while registering the security guard

  /login-security:
    post:
      summary: Log in a security guard
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
              required:
                - id
                - name
      responses:
        '200':
          description: Successful login. Returns an authentication token.
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Missing required fields
        '401':
          description: Invalid credentials
        '500':
          description: An error occurred during login

components:
  schemas:
    VisitDetail:
      type: object
      properties:
        _id:
          type: string
        visitorId:
          type: string
        visitorName:
          type: string
        gender:
          type: string
        citizenship:
          type: string
        visitorAddress:
          type: string
        phoneNo:
          type: string
        vehicleNo:
          type: string
        hostId:
          type: string
        visitDate:
          type: string
        place:
          type: string
        purpose:
          type: string